            APRENDIENDO TAILWIND CON MIDULIVE

Source: https://www.youtube.com/watch?v=h5HQVHTpeHs

Tailwind está basado en utility classes,donde tu vas poniendo clases en el html sin necesidad de usar nunca CSS(como en boostrap)
El autor hace incapié en que el CSS semántico(como BEM) hace repetir código,según él 'las mejores prácticas' no funcionan bien con CSS.

Su web es https://tailwindcss.com/

Puedo ver como hay muchos anchos(w-1,w-2,w-3,w-4,w-5,w-6,w-8,w-10,w-12,w-16,w-20,w-24,w-32,w-40,w-48,w-56,w-64,w-auto)):
  <div class="w-40 
  <div class="w-32 
  <div class="w-24 

Performance: Tailwind automáticamente borra todo el CSS que no se usa al buildearse para producción.La mayoría de los proyectos pesan menos de 10kB

Repeating: Tailwind permite abstraer código con la directiva @apply:
.btn{
   @apply: text-base font-medium rounded-lg p-3;
}
<button class="btn"> 
Sin embargo,si estoy con cualquier framework,es mejor crear un componente,esto es para pure html(sin frameworks)

La diferencia entre Tailwind y Bootstrap es que Bootstrap ofrece un componente con apenas un par de clases ,mientras que en Tailwind hay que estilizarlo todo con clases.
Tailwind tiene una zona premium que ofrece componentes ya hechos ,se llama Tailwind UI.

IMPORTANTE:Tailwind necesita tres dependencias y configurarse:
  "devDependencies": {
    "autoprefixer": "^10.2.6",
    "postcss": "^8.3.5",
    "tailwindcss": "^2.2.4"
  }
1- tailwindcss es la libreria con las clases,etc...
2- postcss es como un babel,es que va a transformar las clases de tailwindcss a css normal,entendible por el navegador.
3- autoprefixer es un plugin que va a añadir los prefijos a las props css que no sean soportadas en algun navegador(por ejemplo IE11).

Tras instalar esto(fijate que según que creador usé puede que configure todo) hay que crear el tailwind.config.js(el código parece el mismo para cualquier framework):

module.exports = {
  mode: 'jit',
  purge: ['./pages/**/*.{js,ts,jsx,tsx}', './components/**/*.{js,ts,jsx,tsx}'],
  darkMode: false, // or 'media' or 'class'
  theme: {
    extend: {},
  },
  variants: {
    extend: {},
  },
  plugins: [],
}


Minuto 21